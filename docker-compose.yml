version: "3"
services:

  front-end-nuxt:
    container_name: front-end-nuxt
    build: ./front-end-nuxt
    volumes:
      - ./front-end-nuxt:/usr/src/app/
      - dependencies-front-end-nuxt:/usr/src/app/node_modules
    working_dir: /usr/src/app
    ports:
      - 3000:3000
    command: ["npm", "run", "dev"]

  first-service:
    container_name: first-service
    build: ./first-service
    volumes:
      - ./first-service:/usr/src/app/
      - dependencies-first-service:/usr/src/app/node_modules
    working_dir: /usr/src/app
    # depends_on:
    #   - redis
    environment:
      NODE_ENV: development
    ports:
      - 3001:3001
    command: npm run dev

  second-service:
    container_name: second-service
    build: ./second-service
    volumes:
      - ./second-service:/usr/src/app/
      - dependencies-second-service:/usr/src/app/node_modules
    working_dir: /usr/src/app
    # depends_on:
    #   - redis
    environment:
      NODE_ENV: development
    ports:
      - 3002:3002
    command: npm run dev

  db:
    container_name: kong_database
    build:
      context: postgres
    environment:
      POSTGRES_USERS: ${KONG_DB_USERNAME}:${KONG_DB_PASSWORD}|${KONGA_DB_USERNAME}:${KONGA_DB_PASSWORD}
      POSTGRES_DATABASES: ${KONG_DB_NAME}:${KONG_DB_USERNAME}|${KONGA_DB_NAME}:${KONGA_DB_USERNAME}
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
    - ./persist_volume:/var/lib/postgresql/data

  kong-migrations:
    image: kong:latest
    entrypoint: sh -c "sleep 10 && kong migrations bootstrap -v"
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_DB_HOST}
      KONG_PG_DATABASE: ${KONG_DB_NAME}
      KONG_PG_USER: ${KONG_DB_USERNAME}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
    depends_on:
    - db
    restart: on-failure

  kong:
      container_name: kong
      image: kong:latest
      environment:
        KONG_DATABASE: ${KONG_DATABASE}
        KONG_PG_HOST: ${KONG_DB_HOST}
        KONG_PG_DATABASE: ${KONG_DB_NAME}
        KONG_PG_USER: ${KONG_DB_USERNAME}
        KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
        KONG_PROXY_ACCESS_LOG: ${KONG_PROXY_ACCESS_LOG}
        KONG_ADMIN_ACCESS_LOG: ${KONG_ADMIN_ACCESS_LOG}
        KONG_PROXY_ERROR_LOG: ${KONG_PROXY_ERROR_LOG}
        KONG_ADMIN_ERROR_LOG: ${KONG_ADMIN_ERROR_LOG}
        KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      restart: on-failure
      ports:
        - "8000:8000/tcp"
        - "8001:8001/tcp"
        - "8443:8443/tcp"
        - "8444:8444/tcp"


  konga_mongo:
    image: mongo
    restart: always
    container_name: konga_mongo
    volumes:
      - ./konga_mongo_data:/data/db

  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    environment:
      DB_ADAPTER: mongo
      DB_HOST: konga_mongo
    depends_on:
      - konga_mongo
      - kong
    ports:
      - 1337:1337

volumes:
  dependencies-first-service:
  dependencies-second-service:
  dependencies-front-end-nuxt:
  postgresql_data:
  persist_volume:
  konga_mongo_data: